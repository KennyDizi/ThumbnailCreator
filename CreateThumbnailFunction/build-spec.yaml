# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: DotNetCoreCLI@2
    displayName: Restore Dependencies
    inputs:
      projects: CreateThumbnailFunction/src/CreateThumbnailFunction/CreateThumbnailFunction.csproj
      command: restore

  - task: DotNetCoreCLI@2
    displayName: Publish Source
    inputs:
      command: publish
      projects: CreateThumbnailFunction/src/CreateThumbnailFunction/CreateThumbnailFunction.csproj
      arguments: -c Debug -o $(Build.SourcesDirectory)/publish
      zipAfterPublish: false

  - task: ArchiveFiles@2
    displayName: Archive Publish Output
    inputs:
      includeRootFolder: false
      archiveType: zip
      rootFolderOrFile: $(Build.SourcesDirectory)/publish
      archiveFile: $(Build.ArtifactStagingDirectory)/publish-$(Build.BuildId).zip

  - task: CopyFiles@2
    displayName: Copy CloudFormation Template
    inputs:
      SourceFolder: infrastructure
      Contents: infra.yaml
      TargetFolder: $(Build.ArtifactStagingDirectory)

  - task: CopyFiles@2
    displayName: Copy CloudFormation Template Parameters
    inputs:
      SourceFolder: infrastructure
      Contents: params.json
      TargetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: ThumbnailCreator
